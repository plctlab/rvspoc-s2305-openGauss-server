drop schema if exists plpgsql_pkg_dependency cascade;
NOTICE:  schema "plpgsql_pkg_dependency" does not exist, skipping
create schema plpgsql_pkg_dependency;
set current_schema = plpgsql_pkg_dependency;
set behavior_compat_options = 'plpgsql_dependency';
create or replace package test_package_depend2_pkg is
type t is record (col1 int, col2 text);
procedure p1(param test_package_depend3_pkg.t);
end test_package_depend2_pkg;
/
WARNING:  Type t does not exist.
WARNING:  The header information of function p1 is not defined.
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package created with compilation erors.
create  or replace package body test_package_depend2_pkg is
procedure p1(param test_package_depend3_pkg.t) is
    begin
        RAISE INFO 'call param: %', param;
    end;
end test_package_depend2_pkg;
/
WARNING:  Type t does not exist.
WARNING:  The header information of function p1 is not defined.
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  The header information of function p1 is not defined.
CONTEXT:  compilation of PL/pgSQL package near line 1
WARNING:  Package Body created with compilation erors.
create or replace package test_package_depend3_pkg is
type t is record (col1 int, col2 text, col3 varchar);
procedure p1(param test_package_depend2_pkg.t);
end test_package_depend3_pkg;
/
--?WARNING:  Package ?.* is invalid.
WARNING:  Package created with compilation erors.
create  or replace  package body test_package_depend3_pkg is
procedure p1(param test_package_depend2_pkg.t) is
    begin
        RAISE INFO 'call param: %', param;
    end;
end test_package_depend3_pkg;
/
--?WARNING:  Package ?.* is invalid.
WARNING:  Package Body created with compilation erors.
call test_package_depend2_pkg.p1((1,'a','2023'));
INFO:  call param: (1,a,2023)
 p1 
----
 
(1 row)

call test_package_depend3_pkg.p1((1,'a'));
INFO:  call param: (1,a)
 p1 
----
 
(1 row)

drop package if exists test_package_depend2_pkg;
--?.*
drop package if exists test_package_depend3_pkg;
NOTICE:  drop cascades to function plpgsql_pkg_dependency.p1(undefined)
-- clean
drop schema plpgsql_pkg_dependency cascade;
reset behavior_compat_options;
